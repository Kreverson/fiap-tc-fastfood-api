name: "Develop CI/CD Pipeline"

on:
  pull_request:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Run Unit Tests and SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Setup Java Version
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "gradle"
          cache-dependency-path: |
              sub-project/*.gradle*
              sub-project/**/gradle-wrapper.properties
        run: ./gradlew build --no-daemon

      - name: Run Unit Tests
        run: ./gradlew clean test

  build_and_push_docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t ${{ github.repository_owner }}/dev-${{ github.repository }}:${{ github.sha }} .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push ${{ github.repository_owner }}/dev-${{ github.repository }}:${{ github.sha }}

  deploy:
    if: false
    uses: ./.github/workflows/terraform.yml
    with:
      environment: dev
      docker_image_url: ${{ github.repository_owner }}/dev-${{ github.repository }}:${{ github.sha }}
      aws-assume-role-arn: "arn:aws:iam::011528262719:oidc-provider/token.actions.githubusercontent.com"
      aws-region: "us-east-2"
      aws-statefile-s3-bucket: "kreverson-us-east-2-terraform-statefile"
      aws-lock-dynamodb-table: "kreverson-us-east-2-terraform-lock"